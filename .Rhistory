objet<-fit_pls(Species~.,train,n_components=3)
objet$formula
objet[[1]]$formula
objet[[1]]$Coefs_regression
objet[[1]]$Constant_regression
objet[[1]]$all_coefs_regression
summary(objet)
objet[[1]]$all_coefs_regression
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
data<-train_test_split(iris,0.8)
train<-data$data_train
test<-data$data_test
objet<-fit_pls(Species~.,train,n_components=3)
summary(objet)
print(objet)
pred<-predict_pls(objet,test,2)
print(pred)
summary_predict(pred)
library(dbplyr)
library(doParallel)
is.formula(Species~.)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
detach("package:PLSV2", unload = TRUE)
remove.packages("PLSV2")
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
objet<-fit_pls(Species~.,iris)
print(objet)
library(PLSV2)
# This file allows us to manage the traces and to test the functions of our packages.
# It is not part of the package.
usethis::use_build_ignore("devtools_history.R")
#usethis::use_package("base")
usethis::use_package("stats")
usethis::use_package("graphics")
usethis::use_package("doParallel")
usethis::use_package("parallel")
usethis::use_package("foreach")
usethis::use_package("grDevices")
library(PLSV2)
library(PLSV2)
objet<-fit_pls(Species~.,iris)
plot(objet)
library(PLSV2)
library(PLSV2)
d<-train_test_split(iris,0.8)
train<-d$data_train
test<-d$data_test
objet<-fit_pls(Species~.,train)
summary(objet)
print(objet)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
c<-rainbow(3)
c[1]
d<-train_test_split(iris,0.8)
train<-d$data_train
test<-d$data_test
objet<-fit_pls(Species~.,train)
summary(objet)
print(objet)
library(PLSV2)
library(PLSV2)
d<-train_test_split(iris,0.8)
train<-d$data_train
test<-d$data_test
objet<-fit_pls(Species~.,train)
summary(objet)
print(objet)
plot(objet)
objet_pls[[1]]$Y_target
objet$Y_target
objet[[1]]$Y_target
rainbow(ncol(objet_pls[[1]]$Ydum))[as.factor(objet_pls[[1]]$Y_target)]
rainbow(ncol(objet[[1]]$Ydum))[as.factor(objet[[1]]$Y_target)]
cbind(objet[[1]]$Components[1],objet[[1]]$Y_target)
library(PLSV2)
d<-train_test_split(iris,0.8)
train<-d$data_train
test<-d$data_test
objet<-fit_pls(Species~.,train)
plot(objet)
objet<-fit_pls(Species~.,train,n_components=4)
plot(objet)
library(PLSV2)
d<-train_test_split(iris,0.8)
train<-d$data_train
test<-d$data_test
objet<-fit_pls(Species~.,train,n_components=4)
plot(objet)
objet[[1]]$n_components+1
library(PLSV2)
library(PLSV2)
d<-train_test_split(iris,0.8)
train<-d$data_train
objet<-fit_pls(Species~.,train,n_components=4)
plot(objet)
library(PLSV2)
# This file allows us to manage the traces and to test the functions of our packages.
# It is not part of the package.
usethis::use_build_ignore("devtools_history.R")
#usethis::use_package("base")
usethis::use_package("stats")
usethis::use_package("graphics")
usethis::use_package("doParallel")
usethis::use_package("parallel")
usethis::use_package("foreach")
usethis::use_package("grDevices")
usethis::use_package("plry")
install.packages("plry")
library(ggplot2)
library(plotly)
remove.packages("PLSV2")
install.packages("plry")
library(PLSV2)
objet<-fit_pls(Species~.,iris,n_components=4)
objet[[1]]$Components
objet[[1]]$Y_target
dth<-cbind(objet[[1]]$Components,objet[[1]]$Y_target)
dth
Y<-objet[[1]]$Y_target
dth<-cbind(objet[[1]]$Components,Y)
dth
p_scatter<-plot_ly(data=dth,x = ~ V1, y = ~ V2, type='scatter', mode = 'markers',col=~Y)
library(plotly)
p_scatter<-plot_ly(data=dth,x = ~ V1, y = ~ V2, type='scatter', mode = 'markers',col=~Y)
p_scatter<-layout(p_scatter,title = "Carte des individus",axis = list(title = "Composante th1"),yaxis = list(title ="Composantes th2", scaleanchor = "x"))
p_scatter
p_scatter<-plot_ly(data=dth,x = ~ V1, y = ~ V2, type='scatter', mode = 'markers',color=~Y)
p_scatter<-layout(p_scatter,title = "Carte des individus",axis = list(title = "Composante th1"),yaxis = list(title ="Composantes th2", scaleanchor = "x"))
p_scatter
usethis::use_build_ignore("devtools_history.R")
#usethis::use_package("base")
usethis::use_package("stats")
usethis::use_package("graphics")
usethis::use_package("doParallel")
usethis::use_package("parallel")
usethis::use_package("foreach")
usethis::use_package("grDevices")
#usethis::use_package("plry")
usethis::use_package("ggplot2")
usethis::use_package("plotly")
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
fit_pls(Species~.,iris,n_components=4)
objet<-fit_pls(Species~.,iris,n_components=4)
plot(objet)
library(PLSV2)
library(PLSV2)
library(PLSV2)
objet<-fit_pls(Species~.,iris,n_components=4)
plot(objet)
# This file allows us to manage the traces and to test the functions of our packages.
# It is not part of the package.
usethis::use_build_ignore("devtools_history.R")
#usethis::use_package("base")
usethis::use_package("stats")
usethis::use_package("graphics")
usethis::use_package("doParallel")
usethis::use_package("parallel")
usethis::use_package("foreach")
usethis::use_package("grDevices")
#usethis::use_package("plry")
# This file allows us to manage the traces and to test the functions of our packages.
# It is not part of the package.
usethis::use_build_ignore("devtools_history.R")
#usethis::use_package("base")
usethis::use_package("stats")
usethis::use_package("graphics")
usethis::use_package("doParallel")
usethis::use_package("parallel")
usethis::use_package("foreach")
usethis::use_package("grDevices")
#usethis::use_package("plry")
# This file allows us to manage the traces and to test the functions of our packages.
# It is not part of the package.
usethis::use_build_ignore("devtools_history.R")
#usethis::use_package("base")
usethis::use_package("stats")
usethis::use_package("graphics")
usethis::use_package("doParallel")
usethis::use_package("parallel")
usethis::use_package("foreach")
usethis::use_package("grDevices")
#usethis::use_package("plry")
library(PLSV2)
objet<-fit_pls(Species~.,iris,n_components=4)
plot(objet)
plot(seq(1:4),objet[[1]]$Q2)
plot(1:4,objet[[1]]$Q2)
t(objet[[1]]$Q2)
dt<-cbind(vect(1:4),t(objet[[1]]$Q2))
dt<-cbind(c(1:4),t(objet[[1]]$Q2))
dt
names(dt)<-c("x","Q2")
dt
class(dt)
dt<-as.data.frame(dt)
names<-c("n","Q2")
dt
names(dt)<-c("n","Q2")
dt
plot(dt$n,dt$Q2)
plot(dt$n,dt$Q2,pch=21)
plot(dt$n,dt$Q2,type="b")
plot(dt$n,dt$Q2,type="b",xlim=c(0,4))
plot(dt$n,dt$Q2,type="b")
plot(dt$n,dt$Q2,type="b",xlim=c(0,4),ylim=c(0,1))
plot(dt$n,dt$Q2,type="b",xlim=c(1,4),ylim=c(0,1))
plot(dt$n,dt$Q2,type="b",xlim=c(0,4),ylim=c(0,1))
plot(dt$n,dt$Q2,type="b",xlim=c(0,5),ylim=c(0,1))
rownames(dth)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
vec(1:10)
vect(1:10)
seq(1:10)
data.frame(c(1:10))
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
library(PLSV2)
objet_pls<-fit_pls(Species~.,iris,n_components=4)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_Q2(obj)
plot_circle_correlation(obj)
plot_explanatories_weights(obj)
plot_explanatories_weights(obj,i=2)
plot_explanatories_weights(obj,i=3)
plot_individuals_components(obj)
library(PLSV2)
library(PLSV2)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
Y_dummy<-obj[[1]]$Ydum
Y<-obj[[1]]$Y_target
dth<-cbind(objet_pls[[1]]$Components,Y)
unique(dth$Y)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
obj[[1]]$Y_target
levels(obj[[1]]$Y_target)
library(PLSV2)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
leg<-c()
for (i in 1:3){leg[i]<-levels(obj[[1]]$Y_target)[i]}
leg
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
levels(obj[[1]]$Y_target)
leg<-c(obj[[1]]$Y_target[1],obj[[1]]$Y_target[2],obj[[1]]$Y_target[3])
print(leg)
y<-levels(obj[[1]]$Y_target)
lege<-c(y[1],y[2],y[3])
pirnt(lege)
print(lege)
leg<-c(obj[[1]]$Y_target[1],obj[[1]]$Y_target[2],obj[[1]]$Y_target[3])
colnames(Y_dummy)
levels(iris)
levels(iris[:5])
levels(iris[,:5])
levels(iris[,5])
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
plot_individuals_components(obj,2)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(obj)
plot_individuals(obj)
plot_individuals(obj,i=1,j=3)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_individuals(obj,i=2,j=3)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
obj[[1]]$Matrix_correlation
obj[[1]]$Matrix_correlation[1:4,]
nrow(obj[[1]]$Matrix_correlation)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
library(PLSV2)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
abline(h=0,v=0,xlim=c(-3,+3),ylim=c(-3,3))
library(PLSV2)
abline(h=0,v=0,xlim=c(-3,+3),ylim=c(-3,3))
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
plot_explanatories_weights(obj)
library(PLSV2)
plot_circle_correlation(obj)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_explanatories_weights(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_explanatories_weights(obj)
plot_circle_correlation(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_circle_correlation(obj)
plot_explanatories_weights(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=4)
plot_explanatories_weights(obj)
plot_circle_correlation(obj)
library(PLSV2)
library(PLSV2)
library(PLSV2)
detectCores()
parallel::detectCores(all.tests = FALSE, logical = TRUE)-1
parallel::detectCores()-1
library(PLSV2)
?dummy
dummy.coef
?dummy.coef
cars
cars
mtcars
?train_test_split
library(PLSV2)
?train_test_split
library(PLSV2)
?train_test_split
library(PLSV2)
library(PLSV2)
?train_test_split
Y<-data.frame(c("Paul","Paul",Pierre"),c("mot","adj","mot))
Y<-data.frame(c("Paul","Paul","Pierre"),c("mot","adj","mot"))
Y
dummy(Y)
dummy(Y[,1])
dummy(iris([,5]))
dummy(iris[,5])
class(dummy(iris[,5]))
class(iris[,5])
library(PLSV2)
?dummy
class(xscale(iris[,1:4]))
?typeof
xscale(dummy(irirs[1:80,5]))
xscale(dummy(iris[1:80,5]))
?fit
?lm
?pls
??pls
library(PLSV2)
library(PLSV2)
library(PLSV2)
?fit_pls
library(PLSV2)
library(PLSV2)
library(PLSV2)
objet<-fit.pls(Species~.,iris,n_components=4)
objet<-fit_pls(Species~.,iris,n_components=4)
plot_individuals_components(objet,2)
objet_pls[[1]]$Components
objet[[1]]$Components
summary(objet)
library(PLSV2)
d<-train_test_split(iris,0.6)
train<-d$data_train
obj<-fit_pls(Species~.,train,n_components=4)
plot_individuals_components(obj)
plot_individuals_components(obj,2)
plot_individuals_components(obj,3)
plot_individuals_components(obj,1)
obj[[1]]$Components
obj[[2]]$Components
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=3)
summary(obj)
library(PLSV2)
colQ2<-c()
for (i in 1: ncol(corall)){
colQ2[i]<-paste("component th",i)
}
corall<-objet[[1]]$Matrix_correlation
corall<-obj[[1]]$Matrix_correlation
for (i in 1: ncol(corall)){
colQ2[i]<-paste("component th",i)
}
colQ2
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=3)
summary(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=3)
summary(obj)
library(PLSV2)
obj<-fit_pls(Species~.,iris,n_components=3)
summary(obj)
print(obj)
req_pkgs <- c(
'available',
'desc',
'usethis',
'gitlabr',
'git2r',
'devtools',
'roxygen2',
'roxygen2md',
'testthat',
'covr'
)
lapply(req_pkgs, function(pkg) {
if (system.file(package = pkg) == '') install.packages(pkg)
})
library(available)
library(available)
library(desc)
library(devtools)
library(git2r)
library(gitlabr)
library(roxygen2)
library(roxygen2md)
library(testthat)
library(covr)
available::available_on_bioc('sisepls')
available::available_on_cran('sisepls')
available::available_on_github('sisepls')
